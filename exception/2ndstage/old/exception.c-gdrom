/*  exception.c

    Initialize the UBC for breakpointing and the 1st_read.bin in memory.
*/

#include "system.h"
#include "serial.h"
#include "util.h"
#include "exception.h"
#include "exception-lowlevel.h"

/* The VBR Buffer - we better find out how large VO's actually is */
unsigned char vbr_buffer[3072];

void* exception_handler(register_stack *stack)
{
    void *back_vector;

    if (stack->r6 == 0 && stack->r7 == 0)   // GDROM_CHECK_COMMAND
    {
        unsigned int *params;

        params = (unsigned int *) stack->r5;

        ubc_serial_init(57600);
        ubc_serial_flush();

        if (stack->r4 == 20)        // Play CDDA tracks
            ubc_serial_write_str("[UBC] Tracks ");
        else if (stack->r4 == 21)   // Play CDDA sectors
            ubc_serial_write_str("[UBC] Sectors ");

        if (stack->r4 == 20 || stack->r4 == 21)
        {
            ubc_serial_write_hex(params[0]);
            ubc_serial_write_str(" - ");
            ubc_serial_write_hex(params[1]);

            ubc_serial_write_str(" Repeat ");
            ubc_serial_write_hex(params[2]);

            ubc_serial_write_str("\r\n");
        }
    }

    back_vector = my_exception_finish;

    return back_vector;
}
