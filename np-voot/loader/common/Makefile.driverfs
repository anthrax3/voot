# Generate ROMFS with specified driver Makefile
#
# $Id: Makefile.driverfs,v 1.4 2002/11/07 02:15:59 quad Exp $

include ../../Makefile.config

ifdef LOADER_FILES
	LOADER_FILES_REAL = $(foreach LOADER_FILE, $(LOADER_FILES), $(NP_BASE)/loader/$(LOADER_TARGET)/$(LOADER_FILE))
endif

all: $(DRIVER).o

$(DRIVER).bin:
	make -C $(NP_BASE)/driver/$(DRIVER) $(DRIVER).bin

$(DRIVER).desc:
	make -C $(NP_BASE)/driver/$(DRIVER) $(DRIVER).desc

$(DRIVER).img: $(DRIVER).bin $(DRIVER).desc
	cp $(NP_BASE)/driver/$(DRIVER)/$(DRIVER).bin romdisk/driver.bin
	cp $(NP_BASE)/driver/$(DRIVER)/$(DRIVER).desc romdisk/driver.desc
    ifdef LOADER_FILES_REAL
		cp $(LOADER_FILES_REAL) romdisk/
    endif
	$(KOS_GENROMFS) -f $(DRIVER).img -d romdisk -v

$(DRIVER).o: $(DRIVER).img
	echo "SECTIONS { .rodata : { _romdisk = .; *(.data); _romdisk_end = .; } }" > script.ld
	$(DC_LD) --no-warn-mismatch --format binary --oformat elf32-shl $(DRIVER).img -o $(DRIVER).o -r -EL -T script.ld
	@$(DC_RM) script.ld

clean:
	( cd romdisk ; find . \( -name CVS -prune \) -o \! -name .\* -print0 | xargs -0 $(DC_RM) )
	@$(DC_RM) *.o
	@$(DC_RM) *.img
	@$(DC_RM) script.ld
	@$(DC_RM) $(CLEAN_COMMON)
